#!/usr/bin/env python

import logging, sys, optparse, os
from collections import defaultdict
from os.path import join, basename, dirname, isfile
import string

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = optparse.OptionParser("usage: %prog [options] filename - convert UCSC ctfile (custom track info as stored in the trash dir) to track hub's trackDb.txt format. Output goes to stdout") 

parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages") 
parser.add_option("", "--download", dest="download", action="store_true", help="only download bigDataUrl files to current dir") 
#parser.add_option("-f", "--file", dest="file", action="store", help="run on file") 
#parser.add_option("", "--test", dest="test", action="store_true", help="do something") 
(options, args) = parser.parse_args()

if options.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)
# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]:
    parser.print_help()
    exit(1)

filename = args[0]
# tags that we don't pass through
delTags = set("visibility origTrackLine name tdbType genome bigDataUrl type inputType description".split())
visToWord = {"3" : "pack", "0" : "hide", "1" : "dense", "2" : "full"}

for line in open(filename):
    fields = line.rstrip('\n').split("\t")
    data = {}
    for field in fields:
        if "=" not in field:
            continue
        k, v = string.split(field, "=", 1)
        v = v.strip("'")
        data[k] = v

    if "bigDataUrl" in data:
        fname = basename(data["bigDataUrl"])
        tName = data["name"].replace("+", "plus").replace("-", "minus").replace(" ", "").replace("(", "").replace(")","")
        #print data
        print "track", tName
        print "shortLabel", data["name"]
        print "longLabel", data["description"]
        print "bigDataUrl", fname
        print "visibility", visToWord[data["visibility"]]
        print "type", data["tdbType"]
        for k, v in data.iteritems():
            if not k in delTags:
                print k, v
        print

    if options.download:
        cmd = "wget "+data["bigDataUrl"]
        assert(os.system(cmd)==0)


