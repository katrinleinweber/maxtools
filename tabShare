#!/usr/bin/env python

import logging, sys, optparse, maxTables

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = optparse.OptionParser("usage: %prog [options] inFile - option sum for field and add percentage of total sum to each line") 

parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages") 
parser.add_option("-f", "--field", dest="field", action="store", type="int", help="only run on column X (zero-based), default %default", default=1) 
#parser.add_option("-f", "--file", dest="file", action="store", help="run on file") 
#parser.add_option("", "--test", dest="test", action="store_true", help="do something") 
(options, args) = parser.parse_args()

if options.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)
# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[]: 
    parser.print_help()
    exit(1)

fname = args[0]
fh = maxTables.openFile(fname)

sum = 0
lineCount = 0
for line in fh:
    fields = line.strip("\n").split("\t")
    val = fields[options.field]
    sum += int(val)
    lineCount+=1

logging.info("lines %d sum %d" % (lineCount, sum))

fh = maxTables.openFile(fname)
for line in fh:
    fields = line.strip("\n").split("\t")
    val = fields[options.field]
    ratio = float(val)/sum
    fields.append(str(ratio))
    print "\t".join(fields)
