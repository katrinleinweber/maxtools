#!/usr/bin/env python

from optparse import OptionParser
import logging, sys, gzip

# === COMMAND LINE INTERFACE, OPTIONS AND HELP ===
parser = OptionParser("usage: %prog [options] filename - remove a column from a tab-sep file") 

#parser.add_option("-l", "--wordlength", dest="motiflength", action="store", help="length of word [default: %default, hexamers]", type="int", metavar="NUMBER", default="6") 
parser.add_option("-k", "--colIndex", dest="colIndex", action="store", help="numerical index of column, 0-based, comma-sep", default=None) 
parser.add_option("-n", "--colName", dest="colName", action="store", help="name of column, comma-sep", default=None) 
parser.add_option("-d", "--debug", dest="debug", action="store_true", help="show debug messages") 
(options, args) = parser.parse_args()

if options.debug:
    logging.basicConfig(level=logging.DEBUG)
else:
    logging.basicConfig(level=logging.INFO)
# ==== FUNCTIONs =====
    
# ----------- MAIN --------------
if args==[] and options.colIndex==None and options.colName==None: 
    parser.print_help()
    exit(1)

fileObj = sys.stdin

if options.colName:
    headers = fileObj.readline().strip("\n#").split("\t")

# get list of column indexes
colIndexList = []
if options.colIndex:
    colIndexString = options.colIndex
    for colIndex in colIndexString.split(","):
        colIndexList.append(int(colIndex))
else:
    colName = options.colName
    for colName in colName.split(","):
        colIndex = headers.index(colName)
        colIndexList.append(int(colIndex))

removeCols = set(colIndexList)

if options.colName:
    keepCols = set(range(0, len(headers)))-removeCols
    outHeaders = [headers[i] for i in sorted(keepCols)]
    print "\t".join(outHeaders)

for l in fileObj:
    if l.startswith("#"):
        continue
    
    lineFields = l.strip("\n").split("\t")
    for i, field in enumerate(lineFields):
        if i not in removeCols:
            sys.stdout.write(field)
            if i != len(lineFields)-1:
                sys.stdout.write("\t")
    sys.stdout.write("\n")
